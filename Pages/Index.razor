@using BlazingPizza.Services
@inject OrderState OrderState
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@page "/"





<div class="main">
    <h1>Blazing Pizzas</h1>
    <ul class="pizza-cards">
        @if (specials.Any())
        {
            foreach (var special in specials)
            {
                <li @onclick="@(() => OrderState.ShowConfigurePizzaDialog(special))" style="background-image: url('@special.ImageUrl')" >
                    <div class="pizza-info">
                        <span class="title">@special.Name</span>
                        @special.Description
                        <span class="price">@special.GetFormattedBasePrice()</span>
                    </div>
                </li>
            }
        }
    </ul>
</div>
@if (OrderState.ShowingConfigureDialog)
{
    <ConfigurePizzaDialog Pizza="OrderState.ConfiguringPizza"
     OnCancel="OrderState.CancelConfigurePizzaDialog"
     OnConfirm="OrderState.ConfirmConfigurePizzaDialog"
    ></ConfigurePizzaDialog>
}

@code {
    List<PizzaSpecial> specials = new List<PizzaSpecial>();
    
  
    protected override async Task OnInitializedAsync()
    {

        specials = await HttpClient.GetFromJsonAsync<List<PizzaSpecial>>(NavigationManager.BaseUri + "specials", CancellationToken.None);
    }

}
